name: ðŸ§© Terraform

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to run the workflow on"
        type: string
        required: true
      tf_work_subdir:
        description: "Subdir of ./test/terraform/ to execute tf in. Used to separate different tf use cases"
        type: string
        required: true
      execute_plan:
        description: "Whether to run `terraform plan` or not"
        type: boolean
        required: false
        default: false
      execute_apply:
        description: "Whether to run `terraform apply` or not"
        type: boolean
        required: false
        default: false
      execute_plan_destroy:
        description: "Whether to run `terraform plan -destroy` or not"
        type: boolean
        required: false
        default: false
      execute_destroy:
        description: "Whether to run `terraform destroy` or not"
        type: boolean
        required: false
        default: false
      tf_log:
        description: "Terraform log level (TRACE, DEBUG, INFO, WARN or ERROR)"
        type: string
        required: false
        default: "INFO"
      distro:
        description: "List of distributions to test"
        type: string
        required: false
        default: "nrdot-collector-host"
      nightly_docker_manifest_sha:
        description: "SHA256 to identify nightly docker manifest to use"
        type: string
        required: false
        default: "docker_manifest_sha_placeholder"
    secrets:
      aws_access_key_id:
        description: "AWS credentials for tf with permission to assume resource-provider"
        required: true
      aws_secret_access_key:
        description: "AWS credentials for tf with permission to assume resource-provider"
        required: true
      aws_account_id:
        description: "AWS account for test purposes with existing role resource-provider"
        required: true
      nr_backend_url:
        description: "NR backend url for test purposes"
        required: false
      nr_ingest_key:
        description: "NR ingest key for test purposes"
        required: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color -input=false"
      TF_LOG: ${{ inputs.tf_log }}
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      TF_VAR_aws_account_id: ${{ secrets.aws_account_id }}
      TF_VAR_nr_backend_url: ${{ secrets.nr_backend_url }}
      TF_VAR_nr_ingest_key: ${{ secrets.nr_ingest_key }}
      TF_VAR_distros: ${{ inputs.distros}}
      TF_VAR_nightly_docker_manifest_sha: ${{ inputs.nightly_docker_manifest_sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

        # TODO: use workspace to namespace state

      - name: Terraform Init
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform init -backend-config='role_arn=arn:aws:iam::${{ secrets.aws_account_id }}:role/resource-provisioner' -backend-config='bucket=nr-terraform-states-${{ secrets.aws_account_id}}'

      - name: Terraform Plan
        if: ${{ inputs.execute_plan }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform plan

      - name: Terraform Apply
        if: ${{ inputs.execute_apply }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform apply -auto-approve

      - name: Terraform Plan Destroy
        if: ${{ inputs.execute_plan_destroy }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform plan -destroy

      - name: Terraform Destroy
        if: ${{ inputs.execute_destroy }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform destroy -auto-approve
